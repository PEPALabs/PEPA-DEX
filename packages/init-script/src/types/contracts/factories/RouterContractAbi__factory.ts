/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.35.0
  Forc version: 0.35.3
  Fuel-Core version: 0.17.3
*/

import { Interface, Contract } from "fuels";
import type { Provider, Account, AbstractAddress } from "fuels";
import type { RouterContractAbi, RouterContractAbiInterface } from "../RouterContractAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 14,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 9,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 10,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum RouterError",
      "components": [
        {
          "name": "NotInitialized",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MultihopPairNotFound",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "MaxInputExceeded",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "PoolFailure",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "AlreadyInitialized",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "LpTokenNotEnough",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "InputNotEnough",
          "type": 0,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "raw untyped ptr",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "str[37]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "str[43]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "struct RawVec",
      "components": [
        {
          "name": "ptr",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 14,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "typeId": 12,
      "type": "struct SwapResult",
      "components": [
        {
          "name": "amount_0_out",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_1_out",
          "type": 14,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "struct Vec",
      "components": [
        {
          "name": "buf",
          "type": 11,
          "typeArguments": [
            {
              "name": "",
              "type": 5,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "len",
          "type": 14,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "typeId": 14,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "swap_address",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "amount_0",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_1",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_0_min",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_1_min",
          "type": 14,
          "typeArguments": null
        }
      ],
      "name": "add_liquidity",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "factory",
          "type": 2,
          "typeArguments": null
        }
      ],
      "name": "initialize",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "swap_address",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "amount_lp",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_0",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_1",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_0_min",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_1_min",
          "type": 14,
          "typeArguments": null
        }
      ],
      "name": "remove_liquidity",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "swap_address",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "asset_0",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset_1",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset_0_amount",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "asset_1_amount",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_out_min",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "to",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "swap_exact_input_for_output",
      "output": {
        "name": "",
        "type": 12,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "swap_factory",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "path",
          "type": 13,
          "typeArguments": [
            {
              "name": "",
              "type": 2,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "amount_in",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_out_min",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "to",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "swap_exact_input_for_output_multihop",
      "output": {
        "name": "",
        "type": 12,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "swap_address",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "asset_0",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset_1",
          "type": 10,
          "typeArguments": null
        },
        {
          "name": "asset_0_amount",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "asset_1_amount",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_in_max",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_out",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "to",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "swap_input_for_exact_output",
      "output": {
        "name": "",
        "type": 12,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "swap_factory",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "path",
          "type": 13,
          "typeArguments": [
            {
              "name": "",
              "type": 2,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "amount_out",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "amount_in_max",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "to",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "swap_input_for_exact_output_multihop",
      "output": {
        "name": "",
        "type": 12,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 7,
        "typeArguments": null
      }
    },
    {
      "logId": 8,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 9,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 10,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 11,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 12,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 13,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 14,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 15,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 16,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 17,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 18,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": null
      }
    },
    {
      "logId": 19,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 20,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 21,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 22,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    },
    {
      "logId": 23,
      "loggedType": {
        "name": "",
        "type": 4,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
}

export class RouterContractAbi__factory {
  static readonly abi = _abi
  static createInterface(): RouterContractAbiInterface {
    return new Interface(_abi) as unknown as RouterContractAbiInterface
  }
  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): RouterContractAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as RouterContractAbi
  }
}
